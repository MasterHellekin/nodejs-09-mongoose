"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t)){for(var r=0,e=new Array(t.length);r<t.length;r++)e[r]=t[r];return e}}var mongoose=require("mongoose"),Schema=mongoose.Schema,userSchema=new Schema({email:{type:String,required:!0},password:{type:String,required:!0},resetToken:String,resetTokenExpiration:Date,cart:{items:[{productId:{type:Schema.Types.ObjectId,ref:"Product",required:!0},quantity:{type:Number,required:!0}}]}});userSchema.methods.addToCart=function(r){var t=this.cart.items.findIndex(function(t){return t.productId.toString()===r._id.toString()}),e=1,o=_toConsumableArray(this.cart.items);0<=t?(e=this.cart.items[t].quantity+1,o[t].quantity=e):o.push({productId:r._id,quantity:e});var a={items:o};return this.cart=a,this.save()},userSchema.methods.removeFromCart=function(r){var t=this.cart.items.filter(function(t){return t.productId.toString()!==r.toString()});return this.cart.items=t,this.save()},userSchema.methods.clearCart=function(){return this.cart={item:[]},this.save()},module.exports=mongoose.model("User",userSchema);